buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-serialization:1.4.20'
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.4.20'
    id "org.jetbrains.kotlin.native.cocoapods" version "1.4.10"
    id 'com.android.library'
}

repositories {
    gradlePluginPortal()
    google()
    jcenter()
    mavenCentral()
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlinx-serialization'

android {
    compileSdkVersion 30
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName '1.0'
    }
    buildTypes {
        'release' {
            minifyEnabled false
        }
    }
}

kotlin {
    version = "1.1.0"
    cocoapods {
        summary = "PIACSI Module"
        homepage = "https://www.privateinternetaccess.com"
        frameworkName = "PIACSI"
    }

    targets.withType(org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTarget) {
        binaries.withType(org.jetbrains.kotlin.gradle.plugin.mpp.Framework) {
            isStatic = false
        }
    }

    targets {
        final def iOSPreset = System.getenv('SDK_NAME')?.startsWith("iphoneos") ? presets.iosArm64 : presets.iosX64
        fromPreset(iOSPreset, "ios") {
            binaries {
                framework("PIACSI")
            }
        }
        fromPreset(presets.android, "android")
    }

    sourceSets {
        commonMain.dependencies {
            implementation "io.ktor:ktor-client-core:$ktor_version"
            implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$serialization_version"
        }
        commonTest.dependencies {
            implementation "org.jetbrains.kotlin:kotlin-test"
            implementation "org.jetbrains.kotlin:kotlin-test-junit"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.5-native-mt"
        }
        androidMain.dependencies {
            implementation 'com.madgag.spongycastle:core:1.54.0.0'
            implementation "io.ktor:ktor-client-okhttp:$ktor_version"
            implementation "org.jetbrains.kotlin:kotlin-stdlib"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$serialization_version"
        }
        iosMain.dependencies {
            implementation "io.ktor:ktor-client-ios:$ktor_version"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$serialization_version"
        }
    }
}

task copyFramework {
    def buildType = 'RELEASE'
    dependsOn kotlin.targets.ios.binaries.getFramework(buildType).linkTask

    doLast {
        def srcFile = kotlin.targets.ios.binaries.getFramework(buildType).outputFile
        def targetDir = getProperty('configuration.build.dir')
        copy {
            from srcFile.parent
            into targetDir
            include 'PIACSI.framework/**'
//            include 'PIACSI.framework.dSYM'
        }
    }
}